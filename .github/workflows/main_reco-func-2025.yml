# .github/workflows/main_reco-func-2025.yml
name: CI/CD Azure Function App - reco-func-2025

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  # Fichier ZIP envoy√© sur Azure (g√©n√©r√© plus bas)
  AZURE_FUNCTIONAPP_PACKAGE_PATH: 'function.zip'
  PYTHON_VERSION: '3.10'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v4

      - name: üêç Setup Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      # --------------------------------------------------------------------
      # ‚öôÔ∏è  INSTALL DEPENDENCIES
      # --------------------------------------------------------------------
      - name: üì¶ Install dependencies from requirements.txt
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # --------------------------------------------------------------------
      # üì¶ PACKAGE THE FUNCTION APP
      # --------------------------------------------------------------------
      - name: üìö Package Function App into ZIP
        run: |
          # Nous sommes d√©j√† √† la racine du d√©p√¥t o√π se trouve function.json
          zip -r function.zip .

      - name: ‚¨ÜÔ∏è Upload artifact for deployment
        uses: actions/upload-artifact@v4
        with:
          name: function-package
          path: function.zip

      - name: ‚¨áÔ∏è Download artifact for deployment
        uses: actions/download-artifact@v4
        with:
          name: function-package

      - name: üöÄ Deploy to Azure Functions
        uses: azure/functions-action@v1
        with:
          app-name: 'reco-func-2025'
          package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'

      - name: üõ°Ô∏è V√©rification pr√©sence de function.json
        run: |
          test -f function.json || (echo "‚ùå function.json manquant !" && exit 1)
